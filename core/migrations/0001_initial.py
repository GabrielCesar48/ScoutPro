# Generated by Django 5.2.1 on 2025-05-28 18:19

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome do Time')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='teams/logos/', verbose_name='Logo')),
                ('primary_color', models.CharField(default='#007bff', help_text='Código hexadecimal da cor (ex: #007bff)', max_length=7, verbose_name='Cor Primária')),
                ('secondary_color', models.CharField(default='#6c757d', help_text='Código hexadecimal da cor (ex: #6c757d)', max_length=7, verbose_name='Cor Secundária')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
            ],
            options={
                'verbose_name': 'Time',
                'verbose_name_plural': 'Times',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('user_type', models.CharField(choices=[('coach', 'Comissão Técnica'), ('player', 'Jogador')], default='player', max_length=10, verbose_name='Tipo de Usuário')),
                ('full_name', models.CharField(blank=True, max_length=100, verbose_name='Nome Completo')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data de Cadastro')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shirt_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Número da Camisa')),
                ('position', models.CharField(choices=[('goalkeeper', 'Goleiro'), ('defender', 'Defensor'), ('midfielder', 'Meio-campo'), ('forward', 'Atacante'), ('line', 'Linha')], default='line', max_length=15, verbose_name='Posição')),
                ('height', models.FloatField(blank=True, null=True, verbose_name='Altura (cm)')),
                ('weight', models.FloatField(blank=True, null=True, verbose_name='Peso (kg)')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='players/photos/', verbose_name='Foto')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo no Time')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Cadastrado em')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='core.team', verbose_name='Time')),
            ],
            options={
                'verbose_name': 'Jogador',
                'verbose_name_plural': 'Jogadores',
                'unique_together': {('team', 'shirt_number')},
            },
        ),
    ]
