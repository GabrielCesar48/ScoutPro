# Generated by Django 5.2.1 on 2025-05-28 19:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EvaluationCriteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome do Critério')),
                ('code', models.CharField(help_text='Código único para identificação', max_length=50, unique=True, verbose_name='Código')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('criteria_type', models.CharField(choices=[('positive', 'Positivo'), ('special', 'Especial'), ('negative', 'Negativo')], max_length=20, verbose_name='Tipo')),
                ('player_type', models.CharField(choices=[('field', 'Jogador de Linha'), ('goalkeeper', 'Goleiro'), ('all', 'Todos')], default='all', max_length=20, verbose_name='Aplicável a')),
                ('points', models.IntegerField(help_text='Pontos atribuídos (pode ser negativo)', verbose_name='Pontos')),
                ('icon', models.CharField(default='fas fa-star', help_text='Classe do ícone Font Awesome', max_length=50, verbose_name='Ícone')),
                ('color', models.CharField(default='primary', help_text='Classe de cor Bootstrap', max_length=20, verbose_name='Cor')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Critério de Avaliação',
                'verbose_name_plural': 'Critérios de Avaliação',
                'ordering': ['criteria_type', 'points'],
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título do Jogo')),
                ('game_type', models.CharField(choices=[('training', 'Treino'), ('friendly', 'Amistoso'), ('official', 'Jogo Oficial')], default='training', max_length=20, verbose_name='Tipo')),
                ('date', models.DateTimeField(verbose_name='Data e Hora')),
                ('location', models.CharField(blank=True, max_length=200, verbose_name='Local')),
                ('opponent', models.CharField(blank=True, help_text='Deixe em branco para treinos', max_length=100, verbose_name='Adversário')),
                ('status', models.CharField(choices=[('scheduled', 'Agendado'), ('in_progress', 'Em Andamento'), ('paused', 'Pausado'), ('finished', 'Finalizado'), ('cancelled', 'Cancelado')], default='scheduled', max_length=20, verbose_name='Status')),
                ('duration', models.PositiveIntegerField(default=0, help_text='Tempo total do jogo em segundos', verbose_name='Duração (segundos)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('game_data', models.JSONField(blank=True, default=dict, help_text='Dados adicionais como configurações específicas', verbose_name='Dados do Jogo')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games_created', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Jogo',
                'verbose_name_plural': 'Jogos',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='GamePlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('selected', 'Selecionado'), ('starting', 'Titular'), ('bench', 'Banco'), ('playing', 'Em Campo'), ('substituted', 'Substituído')], default='selected', max_length=20, verbose_name='Status')),
                ('total_time', models.PositiveIntegerField(default=0, verbose_name='Tempo Jogado (segundos)')),
                ('time_sessions', models.JSONField(blank=True, default=list, help_text='Lista de períodos em campo', verbose_name='Sessões de Tempo')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_players', to='core.game', verbose_name='Jogo')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_participations', to='core.player', verbose_name='Jogador')),
            ],
            options={
                'verbose_name': 'Jogador do Jogo',
                'verbose_name_plural': 'Jogadores do Jogo',
                'unique_together': {('game', 'player')},
            },
        ),
        migrations.CreateModel(
            name='PlayerEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_time', models.PositiveIntegerField(help_text='Momento do jogo quando a avaliação foi feita', verbose_name='Tempo do Jogo (segundos)')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('criteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.evaluationcriteria', verbose_name='Critério')),
                ('evaluated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations_made', to=settings.AUTH_USER_MODEL, verbose_name='Avaliado por')),
                ('game_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='core.gameplayer', verbose_name='Jogador do Jogo')),
            ],
            options={
                'verbose_name': 'Avaliação de Jogador',
                'verbose_name_plural': 'Avaliações de Jogadores',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Substitution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_time', models.PositiveIntegerField(verbose_name='Tempo do Jogo (segundos)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substitutions', to='core.game', verbose_name='Jogo')),
                ('made_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substitutions_made', to=settings.AUTH_USER_MODEL, verbose_name='Feita por')),
                ('player_in', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substitutions_in', to='core.player', verbose_name='Entra no Jogo')),
                ('player_out', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substitutions_out', to='core.player', verbose_name='Sai de Campo')),
            ],
            options={
                'verbose_name': 'Substituição',
                'verbose_name_plural': 'Substituições',
                'ordering': ['-created_at'],
            },
        ),
    ]
